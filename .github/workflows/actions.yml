# This is a basic workflow to help you get started with Actions
name: CI-CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  


#elasticbeanstalk-eu-north-1-807789500198
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
   runs-on: ubuntu-latest
  
   steps:
     - uses: actions/checkout@v2
     - name: Build Docker image 
       run: docker build -t nebbigit/react-test -f ./client/Dockerfile ./client
     - name: Run tests inside the container
       run: docker run nebbigit/react-test npm test -- --coverage
 
  build_deploy:
    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push client
        uses: docker/build-push-action@v2
        with:
          context: ./client
          push: true
          tags: nebbigit/multi-client:latest
      - 
        name: Build and push api
        uses: docker/build-push-action@v2
        with:
          context: ./server
          push: true
          tags: nebbigit/multi-server:latest
      - 
        name: Build and push nginx
        uses: docker/build-push-action@v2
        with:
          context: ./nginx
          push: true
          tags: nebbigit/multi-nginx:latest
      - 
        name: Build and push worker
        uses: docker/build-push-action@v2
        with:
          context: ./worker
          push: true
          tags: nebbigit/multi-worker:latest        
            