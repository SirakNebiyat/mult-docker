# This is a basic workflow to help you get started with Actions
name: CI-CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  


#elasticbeanstalk-eu-north-1-807789500198
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
   runs-on: ubuntu-latest
  
   steps:
     - uses: actions/checkout@v2
     - name: Build Docker image 
       run: docker build -t nebbigit/react-test -f ./client/Dockerfile.dev .
     - name: Run tests inside the container
       run: docker run nebbigit/react-test npm test -- --coverage
 

  # deploy_to_elastic_beanstalk:
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/master'
  #   needs: [build_test]

  #   steps: 
  #     - name: Checkout Latest Repo
  #       uses: actions/checkout@v2
        
  #     - name: Generate Deployment Package 
  #       run: zip -r deploy.zip * -x "**node_modules**"
  #     - name: 'AWS: Timestamp action'
  #       uses: gerred/actions/current-time@master
  #       id: current-time
      
  #     - name: 'AWS: String replace action'
  #       uses: frabert/replace-string-action@master
  #       id: format-time
  #       with:
  #         pattern: '[:\.]+'
  #         string: "${{ steps.current-time.outputs.time }}"
  #         replace-with: '-'
  #         flags: 'g'

  #     - name: Beanstalk Deploy my app
  #       uses: einaregilsson/beanstalk-deploy@v4
  #       with:
  #         aws_access_key: ${{secrets.AWS_ACCESS_ID}}
  #         aws_secret_key: ${{secrets.AWS_SECRET_KEY}}
  #         application_name: docker
  #         environment_name: docker-env
  #         region: eu-north-1
  #         version_label: "docker-app-v${{ steps.format-time.outputs.replaced }}"
  #         deployment_package: deploy.zip


 # This workflow contains multiple jobs
  # build_test:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [14.x]
        
  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'npm'

  #     # install applicaion dependencies
  #     - name: Install dependencies
  #       run: |
  #         npm install
  #         npm ci 
  #     # build and test the apps     
  #     - name: build
  #       run: |
  #         npm run build
  #         npm run test

      # Share artifact inside workflow
      # - name: Share artifact inside workflow
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: docker--react-build
      #     path: | 
      #       .
      #       !node_modules
            