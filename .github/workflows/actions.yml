# This is a basic workflow to help you get started with Actions
name: CI-CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  


#elasticbeanstalk-eu-north-1-807789500198
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      - uses: actions/setup-node@v2
        with:
          working-directory: ./client
          node-version: ${{ matrix.node-version }}
      
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
          
      - name: Install dependencies
        working-directory: ./client
        run: npm ci --ignore-scripts
      # install applicaion dependencies
      #- name: Install dependencies
       # working-directory: ./client
        #run: |
         # npm install
          #npm ci 
      # build and test the apps     
      - name: build
        working-directory: ./client
        run: |
          npm run build
          npm run test
  
  build_deploy_to_docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [build_test]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
       name: Set up QEMU
       uses: docker/setup-qemu-action@v1
      -
       name: Set up Docker Buildx
       id: buildx
       uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push client
        uses: docker/build-push-action@v2
        with:
          context: client
          push: true
          tags: nebbigit/multi-client:latest

      - 
        name: Build and push api
        uses: docker/build-push-action@v2
        with:
          context: server
          push: true
          tags: nebbigit/multi-server:latest
      - 
        name: Build and push nginx
        uses: docker/build-push-action@v2
        with:
          context: nginx
          push: true
          tags: nebbigit/multi-nginx:latest
      - 
        name: Build and push worker
        uses: docker/build-push-action@v2
        with:
          context: worker
          push: true
          tags: nebbigit/multi-worker:latest   
    
    deploy_to_elastic_beanstalk:
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/master'
      needs: [build_test]

      steps: 

        - name: Checkout Latest Repo
          uses: actions/checkout@v2
          
        - name: Generate Deployment Package 
          run: zip -r deploy.zip * -x "**node_modules**"
        - name: 'AWS: Timestamp action'
          uses: gerred/actions/current-time@master
          id: current-time
        
        - name: 'AWS: String replace action'
          uses: frabert/replace-string-action@master
          id: format-time
          with:
            pattern: '[:\.]+'
            string: "${{ steps.current-time.outputs.time }}"
            replace-with: '-'
            flags: 'g'

        - name: Beanstalk Deploy my app
          uses: einaregilsson/beanstalk-deploy@v4
          with:
            aws_access_key: ${{secrets.AWS_ACCESS_KEY}}
            aws_secret_key: ${{secrets.AWS_SECRET_KEY}}
            application_name: multi-docker
            environment_name: Multidocker-env
            region: eu-north-1
            version_label: "multi-docker-app-v${{ steps.format-time.outputs.replaced }}"
            deployment_package: deploy.zip
  
